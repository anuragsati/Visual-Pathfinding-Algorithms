{"version":3,"sources":["components/Algorithms/BFS.jsx","components/FrontEnd/Node.jsx","components/FrontEnd/logo.svg","components/FrontEnd/MainPage.jsx","components/App.jsx","index.js"],"names":["endNode","Node","props","node","row","col","isWall","isStart","isEnd","onMouseDown","onMouseEnter","onMouseUp","extraClasses","id","className","visited","shortestPath","windowWidth","Math","floor","window","innerWidth","windowHeight","innerHeight","BFS","grid","START_NODE","END_NODE","dRow","dCol","sx","sy","ex","ey","q","buckets","Queue","enqueue","isVisited","isEmpty","currentElement","peek","dequeue","push","console","log","i","adjX","adjY","isValid","previousNode","shortestPathOrder","reverse","getShortestPathOrder","visitedNodesOrder","time","setTimeout","document","getElementById","visualizeShortestPath","visualizeVisited","visualizeBFS","MainPage","useState","setGrid","mousePressed","setMousePressed","useEffect","initialGrid","getInitialGrid","currentRow","createNode","prevNode","Fragment","src","logo","href","onClick","resetAll","resetAllExceptWalls","map","handleMouseDown","allClasses","split","includes","idx","indexOf","splice","join","handleMouseEnter","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e55890cf.chunk.js","sourcesContent":["import buckets from 'buckets-js'\n\nlet visited = [];\nlet shortestPath = [];\nlet startNode, endNode;\n\nconst windowWidth =  Math.floor(window.innerWidth/22);\nconst windowHeight =  Math.floor((window.innerHeight-150)/21);\n\nexport default function BFS(grid, START_NODE, END_NODE){\n\tvisited = []\n\tshortestPath=[]\n   const dRow = [-1, 0, 1, 0]; \n   const dCol = [0, 1, 0, -1]\n\n\tconst [sx, sy] = START_NODE;\n\tconst [ex, ey] = END_NODE;\n\n   //used for shortes path creation\n   startNode = grid[sx][sy];\n   endNode = grid[ex][ey];\n\n\t//actual algo start from here\n\tlet q = buckets.Queue();\n\tq.enqueue(grid[sx][sy]);\n\tgrid[sx][sy].isVisited = true;\n\n\twhile(!q.isEmpty()){\n\t\tconst currentElement = q.peek();\n\t\tlet row = currentElement.row;\n\t\tlet col = currentElement.col;\n\t\tq.dequeue();\n\n\t\t//do not process node if it is a wall\n\t\tif(grid[row][col].isWall)\n\t\t\tcontinue;\n\n\t\t//processing current node\n\t\tvisited.push({row,col});\n\n\t\tif(grid[ex][ey] === currentElement){\n            console.log(\"found\")\n\t\t\tbreak;\n\t\t}\n\n\t\t\n\t\tfor(let i=0; i<4; ++i){\n\t\t\tlet adjX = row + dRow[i];\n\t\t\tlet adjY = col + dCol[i];\n\n\t\t\tif(isValid(grid, adjX, adjY)){\n\t\t\t\tq.enqueue(grid[adjX][adjY]);\n\t\t\t\tgrid[adjX][adjY].isVisited = true;\n\t\t\t\tgrid[adjX][adjY].previousNode = grid[row][col];\n\t\t\t}\n\t\t}\n\t}\n\n\t//After finishing BFS computation\n\tvisualizeBFS();\n}\n\n\n\n//===========Visualizer functions =======\n\n\nfunction visualizeBFS(){\n\tconst shortestPathOrder = getShortestPathOrder();\n\tconst visitedNodesOrder = getVisitedNodesOrder();\n\tvisualizeVisited(visitedNodesOrder, shortestPathOrder);    \n}\n\nfunction visualizeVisited(visitedNodesOrder, shortestPathOrder){ \t//visualize visited nodes \n\tlet time=0;\n\tfor(let node of visitedNodesOrder){\n\t\t if(node.row === endNode.row && node.col === endNode.col){  //wait for visited animation to complete\n\t\t\t  setTimeout(() => {\n\t\t\t\t\tvisualizeShortestPath(shortestPathOrder);\n\t\t\t  }, 5.5*time);\n\t\t\t  return;\n\t\t }\n\n\t\t setTimeout(() => {\n\t\t\t  document.getElementById(`node-${node.row}-${node.col}`).className = 'node node-visited';\n\t\t }, 5*(time++));\n\t}\n}\n\nfunction visualizeShortestPath(shortestPathOrder){  // draw shortest path in order\n\tlet time=0;\n\tfor(let node of shortestPathOrder){\n\t\t setTimeout(() => {\n\t\t\t  document.getElementById(`node-${node.row}-${node.col}`).className = 'node shortest-path';\n\t\t }, 50*(time++));\n\t}\n\n}\n\n\n\n\n\n\n//=========Helper functions ========\n\nfunction getVisitedNodesOrder(){\n   return visited;\n}\n\nfunction getShortestPathOrder(){\n    for(let node = endNode; node !=null; node = node.previousNode){\n\t\tconst {row, col} = node;\n\t\tshortestPath.push({row, col});\n    }\n\n    //return reverse of shortest path ... i.e fornt -> end\n    return shortestPath.reverse();\n}\n\nfunction isValid(grid, row, col){\n\tif (row < 0 || col < 0 || row >= windowHeight || col >= windowWidth)\n\t\treturn false;\n\tif (grid[row][col].isVisited)\n\t\treturn false;\n\t\n\treturn true;\n}\n","import './Node.css'\n\nconst Node = (props) => {\n\tconst {row, col, isWall, isStart, isEnd} = props.node;\n\tconst {onMouseDown, onMouseEnter, onMouseUp} = props;\n\n\tconst extraClasses = isStart ? 'node-start' : isEnd ? 'node-end' : isWall ? 'node-wall' : '';\n\t\n\treturn ( \n\t\t<div\n\t\t\tid={`node-${row}-${col}`}\n\t\t\tclassName={`node ${extraClasses}`} \n\t\t\tonMouseDown = {() => onMouseDown(row, col)}\n\t\t\tonMouseEnter= {() => onMouseEnter(row, col)}\n\t\t\tonMouseUp= {() => onMouseUp()}\n\t\t></div>\n\t);\n}\n \nexport default Node;","export default __webpack_public_path__ + \"static/media/logo.50d5c895.svg\";","import React, { useState, useEffect} from 'react';\nimport Node from './Node'\nimport './MainPage.css'\nimport logo from './logo.svg'\nimport BFS from '../Algorithms/BFS'\n\n\n//constants\nconst START_NODE = [10, 4];\nconst END_NODE =  [15, 45];\nconst windowWidth =  Math.floor(window.innerWidth/22);\nconst windowHeight =  Math.floor((window.innerHeight - 150)/21);\n\n\nconst MainPage = () => {\n\t//Hooks\n\tlet [grid, setGrid] = useState([]);\n\tlet [mousePressed, setMousePressed] = useState(false);\n\n\t//when our page first mounts\n\tuseEffect(() => {\n\t\tlet initialGrid = getInitialGrid();\n\t\tsetGrid(initialGrid);\n\t}, []);\n\n\n\t// =========== Additional Functions =============\n\n\t//Creates Inital grid\n\tconst getInitialGrid = () => {          \n\t\tconst initialGrid= [];\n\t\tfor (let row = 0; row < windowHeight; row++) {\n\t\t\tconst currentRow = [];\n\t\t\tfor (let col = 0; col < windowWidth; col++) {\n\t\t\t\tcurrentRow.push(createNode(row,col));\n\t\t\t}\n\t\t\tinitialGrid.push(currentRow);\n\t\t}\n\n\t\treturn initialGrid;\n\t};\n\n\n\t//Creates the node template\n\tconst createNode = (row, col) => {\n\t\tconst newNode = {\n\t\t\trow,\n\t\t\tcol,\n\t\t\tisVisited : false,\n\t\t\tisWall : false,\n\t\t\tprevNode : null,\n\t\t\tisStart : (row===START_NODE[0]) && (col===START_NODE[1]),\n\t\t\tisEnd : (row===END_NODE[0]) && (col===END_NODE[1]),\n\t\t}\n\n\t\treturn newNode;\n\t}\n\n\n\t//resets everything\n\tconst resetAll = () => {\n\t\tsetGrid(getInitialGrid()); //reset grid and properties to initialGrid \n\n\t\tfor (let row = 0; row < windowHeight; row++) {\n\t\t\tfor (let col = 0; col < windowWidth; col++) {\n\t\t\t\tdocument.getElementById(`node-${row}-${col}`).className = \"node\"\n\t\t\t}\n\t\t}\n\n\t\tdocument.getElementById(`node-${START_NODE[0]}-${START_NODE[1]}`).className = \"node node-start\";\n\t\tdocument.getElementById(`node-${END_NODE[0]}-${END_NODE[1]}`).className = \"node node-end\";\n\t}\n\n\n\t//resets everything but keep walls\n\tconst resetAllExceptWalls = () => {\n\n\t\tfor (let row = 0; row < windowHeight; row++) {\t\n\t\t\tfor (let col = 0; col < windowWidth; col++) {\n\t\t\t\t//if current node is not a wall then reset all classes & if it is not a wall then do nothing i.e node-wall class will remain\n\t\t\t\tif(!grid[row][col].isWall){\t\n\t\t\t\t\tdocument.getElementById(`node-${row}-${col}`).className = \"node\"\n\t\t\t\t}\n\t\t\t\tgrid[row][col].isVisited = false;\n\t\t\t\tgrid[row][col].prevNode = null;\n\t\t\t}\n\t\t}\n\n\t\tdocument.getElementById(`node-${START_NODE[0]}-${START_NODE[1]}`).className = \"node node-start\";\n\t\tdocument.getElementById(`node-${END_NODE[0]}-${END_NODE[1]}`).className = \"node node-end\";\n\n\t\tsetGrid(grid);\n\t}\n\n\n\t//===========Mouse events to draw walls\n\tconst handleMouseDown = (row, col) => {\n\t\tgrid[row][col].isWall = !grid[row][col].isWall;\n\t\tsetGrid(grid);\n\t\tsetMousePressed(true);\n\t}\n\n\tconst handleMouseEnter = (row, col) => {\n\t\tif(!mousePressed)\n\t\t\treturn;\n\n\n\t\t//temporary solution to late rendering elements\n\t\tlet allClasses = document.getElementById(`node-${row}-${col}`).className.split(\" \");\n\t\tif(allClasses.includes('node-wall')){\n\t\t\tconst idx = allClasses.indexOf('node-wall');\n\t\t\tallClasses.splice(idx, 1);\n\t\t\tdocument.getElementById(`node-${row}-${col}`).className = allClasses.join(\" \");\n\t\t}\n\t\telse if(!allClasses.includes('node-wall')){\n\t\t\tallClasses.push('node-wall');\n\t\t\tdocument.getElementById(`node-${row}-${col}`).className = allClasses.join(\" \");\n\t\t}\n\t\t\n\t\tgrid[row][col].isWall = !grid[row][col].isWall;\n\t\tsetGrid(grid);\n\t}\n\n\tconst handleMouseUp= () => {\n\t\tsetGrid(grid);\n\t\tsetMousePressed(false);\n\t}\n\n\n\n\n\t//==================Finally return\n\n\treturn (\n\t\t<React.Fragment>\n\n\t\t{/* =====Header====== */}\n\t\t<nav className=\"navbar\">\n\t\t\t<a> <img className=\"logo\" src={logo} /> </a>\n\n\t\t\t<div className=\"legend\">\n\t\t\t\t<div className=\"legend-item\">\n\t\t\t\t\t<div className=\"symbol symbol-start\"></div>\n\t\t\t\t\t<span className=\"symbol-text\">Start Node</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"legend-item\">\n\t\t\t\t\t<div className=\"symbol symbol-end\"></div>\n\t\t\t\t\t<span className=\"symbol-text\">End Node</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"legend-item\">\n\t\t\t\t\t<div className=\"symbol symbol-wall\"></div>\n\t\t\t\t\t<span className=\"symbol-text\">Wall</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<ul className=\"navbar-nav\">\n\t\t\t\t{/* <li className=\"nav-item\"> <a href=\"#\" className=\"nav-link\"> BFS </a> </li> */}\n\t\t\t\t<li className=\"nav-item\"> <a href=\"#\" className=\"nav-link\" onClick={() => resetAll()}> Reset All </a> </li>\n\t\t\t\t<li className=\"nav-item\"> <a href=\"#\" className=\"nav-link\" onClick={() => resetAllExceptWalls()}> Reset (Keep Walls)</a> </li>\n\t\t\t\t<li className=\"nav-item\"> <a href=\"#\" className=\"nav-link visualize-button\" onClick={() => BFS(grid, START_NODE, END_NODE)}> Visualize </a> </li>\n\t\t\t</ul>\n\n\t\t</nav>\n\n\t\t{/* =====Grid====== */}\n\t\t<div className=\"grid\">\n\t\t\t{\n\t\t\t\tgrid.map(row => \n\t\t\t\t\t<div className=\"inner-grid-div\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trow.map(node => \n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t\t\t<Node\n\t\t\t\t\t\t\t\t\t\t\t\tnode = {node}\n\t\t\t\t\t\t\t\t\t\t\t\tonMouseDown = {(row, col) => handleMouseDown(row,col)}\n\t\t\t\t\t\t\t\t\t\t\t\tonMouseEnter= {(row, col) => handleMouseEnter(row,col)}\n\t\t\t\t\t\t\t\t\t\t\t\tonMouseUp= {() => handleMouseUp()}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t</div>\n\t\t</React.Fragment>\n\t);\n}\n\n\nexport default MainPage;\n","import React from 'react';\nimport MainPage from './FrontEnd/MainPage';\n\nfunction App() {\n  return (\n    <div className='App'>\n\t\t\t<MainPage />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n//Imports\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n\t\t<App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}